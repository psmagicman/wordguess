{"version":3,"sources":["hooks.js","enums.js","components/Message.js","components/CharPrompt.js","components/Screen.js","components/RestartButton.js","components/Score.js","App.js","serviceWorker.js","index.js"],"names":["GetFetch","url","initialState","_useState","useState","_useState2","Object","slicedToArray","data","setData","updateData","inputData","newData","life","hasOwnProperty","spaces","guesses","alert","token","status","stoken","fetchUrl","_fetchUrl","apply","this","arguments","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","stop","useEffect","PostFetch","callback","_fetchUrl2","_callee2","payload","_context2","method","headers","Accept","Content-Type","body","JSON","stringify","_x","gameFlags","START","PROGRESS","LOST","WIN","Message","props","message","react_default","createElement","Typography","component","variant","color","align","gutterBottom","CharPrompt","char","setChar","_useState3","_useState4","disable","setDisable","sendChar","process","update","sendData","Grid","container","spacing","item","xs","sm","TextField","name","fullWidth","id","label","autoFocus","value","disabled","onKeyDown","e","keyCode","onChange","target","Button","type","onClick","Screen","split","join","Restart","size","useStyles","makeStyles","theme","error","backgroundColor","palette","dark","display","alignItems","icon","fontSize","iconVariant","opacity","marginRight","Score","setName","snackErrorOpen","setSnackErrorOpen","_useState5","_useState6","snackSaveOpen","setSnackSaveOpen","open","classes","sendScore","saveScore","length","handleClose","className","Snackbar","margin","autoHideDuration","onClose","event","reason","Dialog","DialogTitle","DialogContent","DialogActions","@global","common","white","paddingTop","paddingBottom","paper","marginTop","flexDirection","messageHeight","height","lettersHeight","form","width","submit","Boolean","window","location","hostname","match","ReactDOM","render","setOpen","messagePaper","clsx","lettersPaper","_GetFetch","_GetFetch2","fetchStart","restartGame","setTimeout","Container","maxWidth","CssBaseline","Paper","restart","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec070cba.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst GetFetch = (url, initialState) => {\n  const [data, setData] = useState(initialState);\n\n  function updateData(inputData) {\n    let newData = {\n      'life': inputData.hasOwnProperty('life') ? inputData.life : data.life,\n      'spaces': inputData.hasOwnProperty('spaces') ? inputData.spaces : data.spaces,\n      'guesses': inputData.hasOwnProperty('guesses') ? inputData.guesses : data.guesses,\n      'alert': inputData.hasOwnProperty('alert') ? inputData.alert : data.alert,\n      'token': inputData.hasOwnProperty('token') ? inputData.token : data.token,\n      'status': inputData.hasOwnProperty('status') ? inputData.status : data.status,\n      'stoken': inputData.hasOwnProperty('stoken') ? inputData.stoken : data.stoken,\n    };\n    setData(newData);\n  }\n\n  async function fetchUrl() {\n    const response = await fetch(url);\n    const json = await response.json();\n    updateData(json);\n  }\n\n  useEffect(() => {\n    fetchUrl();\n  }, []);\n\n  return [data, updateData, fetchUrl];\n}\n\nconst PostFetch = (url, callback) => {\n    \n    async function fetchUrl(payload) {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n      const json = await response.json();\n      callback(json);\n    }\n\n    return fetchUrl;\n}\n\nexport { GetFetch, PostFetch };","const gameFlags = {\n    'START': 0,\n    'PROGRESS': 1,\n    'LOST': 2,\n    'WIN': 3,\n};\n\nexport { gameFlags };","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Message(props) {\n  \n  const alert = props.message ? props.message : '...';\n\n  return (\n    <Typography \n        component=\"p\" \n        variant=\"h6\" \n        color=\"textPrimary\" \n        align=\"center\" \n        gutterBottom>\n      {alert}\n    </Typography>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nimport { PostFetch } from '../hooks';\nimport { gameFlags } from '../enums';\n\nexport default function CharPrompt(props) {\n  const [char, setChar] = useState('');\n  const [disable, setDisable] = useState(false);\n  \n  let token = props.data.hasOwnProperty('token') ? props.data.token : '';\n\n  const sendChar = PostFetch(process.env.REACT_APP_URL\n                       + '/api/v1/word', props.update)\n  const onEnter = (e) => {\n    // Return key\n    if (e.keyCode === 13) {\n      sendData();\n    }\n  }\n\n  const sendData = () => {\n    sendChar({'char': char, 'token': token});\n    setChar('');\n  }\n\n  useEffect(() => {\n    if (props.status === gameFlags.START) {\n      setChar('');\n      setDisable(false);\n    } else if (props.status > gameFlags.PROGRESS) {\n      setDisable(true);\n      setChar('');\n    }\n  }, [props.status]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          name=\"charField\"\n          variant=\"outlined\"\n          fullWidth\n          id=\"charField\"\n          label=\"Character\"\n          autoFocus\n          value={char}\n          disabled={disable}\n          onKeyDown={onEnter}\n          onChange={(e) => setChar(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disable}\n          onClick={sendData}\n        >\n          Submit\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Screen(props) {\n\n  function delimitGuesses(guessSequence) {\n    return guessSequence.split('').join(', ');\n  }\n\n  function separateSpaces(spaceSequence) {\n    return spaceSequence.split('').join(' ');\n  }\n\n  const life = props.data.life >= 0 ? props.data.life : 0;\n  const spaces = props.data.spaces ? separateSpaces(props.data.spaces) : '';\n  const guesses = props.data.guesses ? delimitGuesses(props.data.guesses) : '';\n\n  return (\n    <div>\n      <Typography component=\"p\">\n        Incorrect guesses remaining: {life}\n      </Typography>\n      <Typography component=\"p\" variant=\"h6\" align=\"center\" gutterBottom>\n        {spaces}\n      </Typography>\n      <Typography component=\"p\">\n        Current guesses: {guesses}\n      </Typography>\n    </div>\n  );\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function Restart(props) {\n\n  const restart = function() {\n    props.onClick();\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Button\n        type=\"button\"\n        fullWidth\n        size=\"large\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => { restart() }}\n      >\n        Restart\n      </Button>\n    </Grid>\n  );\n\n}\n\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { PostFetch } from '../hooks';\n\nconst useStyles = makeStyles(theme => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n}))\n\nexport default function Score(props) {\n  const [name, setName] = useState('');\n  const [snackErrorOpen, setSnackErrorOpen] = useState(false);\n  const [snackSaveOpen, setSnackSaveOpen] = useState(false);\n  let stoken = props.data.hasOwnProperty('stoken') ? props.data.stoken : '';\n  let open = props.open;\n\n  const classes = useStyles();\n\n  const sendScore = PostFetch(process.env.REACT_APP_URL \n                        + '/api/v1/score', props.update);\n\n  const handleOpenErrorSnackBar = () => {\n    setSnackErrorOpen(true);\n  }\n\n  const handleCloseErrorSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackErrorOpen(false);\n  }\n\n  const handleOpenSaveSnackBar = () => {\n    setSnackSaveOpen(true);\n  }\n\n  const handleCloseSaveSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackSaveOpen(false);\n  }\n\n  const onEnter = (e) => {\n    // Return key\n    if (e.keyCode === 13) {\n      saveScore();\n    }\n  }\n\n  const saveScore = () => {\n    if (name.length > 0 && stoken.length > 0) {\n      sendScore({'name': name, 'stoken': stoken});\n      setName('');\n      handleOpenSaveSnackBar();\n      props.handleClose();\n    } else {\n      handleOpenErrorSnackBar();\n    }\n  }\n\n  return (\n    <div className=\"\">\n      <Snackbar\n        className={classes.margin}\n        autoHideDuration={2000}\n        open={snackSaveOpen}\n        onClose={handleCloseSaveSnackBar}\n        message={\n          <span id=\"score-save-snackbar\" className={classes.message}>\n            Name and score saved.\n          </span>\n        }\n      />\n      <Snackbar\n        className={classes.margin}\n        autoHideDuration={1000}\n        open={snackErrorOpen}\n        onClose={handleCloseErrorSnackBar}\n        message={\n          <span id=\"score-error-snackbar\" className={classes.message}>\n            No name or score found.\n          </span>\n        }\n      />\n      <Dialog\n        open={open}\n        onClose={props.handleClose}\n      >\n        <DialogTitle id=\"score-dialog-title\">Save score</DialogTitle>\n        <DialogContent>\n          <TextField\n              name=\"nameField\"\n              variant=\"outlined\"\n              fullWidth\n              id=\"nameField\"\n              label=\"Name\"\n              onKeyDown={onEnter}\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n        </DialogContent>\n        <DialogActions>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={props.handleClose}\n            >\n              Cancel\n            </Button>\n            <Button \n              type=\"button\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={saveScore}\n            >\n              Save score\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport './App.css';\nimport { GetFetch } from './hooks';\nimport { gameFlags } from './enums';\nimport Message from './components/Message';\nimport CharPrompt from './components/CharPrompt';\nimport Screen from './components/Screen';\nimport RestartButton from './components/RestartButton';\nimport Score from './components/Score';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  container: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  messageHeight: {\n    height: 125,\n  },\n  lettersHeight: {\n    height: 100,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const messagePaper = clsx(classes.paper, classes.messageHeight);\n  const lettersPaper = clsx(classes.paper, classes.lettersHeight);\n  const initialState = {\n    'life': 5,\n    'spaces': '_',\n    'guesses': '',\n    'alert': '',\n    'token': '',\n    'status': 0,\n    'stoken': '',\n  }\n\n  let [data, updateData, fetchStart] = GetFetch(process.env.REACT_APP_URL \n                                          + '/api/v1/start', initialState);\n\n  const restartGame = () => {\n    updateData(initialState);\n    fetchStart();\n  }\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n    setTimeout(() => {\n      restartGame();\n    }, 3000);\n  }\n\n  useEffect(() => {\n    if (data.status === gameFlags.WIN) {\n      setTimeout(() => {\n        handleOpen();\n      }, 2000);\n    }\n  }, [data.status])\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          hangman\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <RestartButton onClick={restartGame} />\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={messagePaper}>\n              <Message message={data.alert} />\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={lettersPaper}>\n              <Screen data={data} />\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <CharPrompt \n              data={data} \n              update={updateData} \n              restart={restartGame} \n              status={data.status} />\n          </Grid>\n        </Grid>\n          <Score \n            handleClose={handleClose} \n            data={data} \n            update={updateData}\n            open={open} />\n      </div>\n    </Container>\n\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}